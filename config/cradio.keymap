// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        ht: hold_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <220>;
            quick-tap-ms = <150>;
            require-prior-idle-ms = <100>;
            bindings = <&kp>, <&kp>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q  &kp W  &kp E  &kp R      &kp T       &kp Y  &kp U      &kp I      &kp O    &kp P
&kp A  &kp S  &kp D  &kp F      &kp G       &kp H  &kp J      &kp K      &kp L    &kp SEMI
&kp Z  &kp X  &kp C  &kp V      &kp B       &kp N  &kp M      &kp COMMA  &kp DOT  &kp FSLH
                     &kp LSHFT  &kp LALT    &mo 1  &kp LCTRL
            >;
        };

        right_layer {
            bindings = <
&kp N1   &kp N2    &kp N3    &kp N4     &kp N5       &kp N6         &kp N7     &kp N8         &kp N9            &kp N0
&kp TAB  &kp LEFT  &kp UP    &kp RIGHT  &kp PG_UP    &kp BACKSPACE  &kp MINUS  &kp EQUAL      &kp LEFT_BRACKET  &kp RIGHT_BRACKET
&kp ESC  &kp HOME  &kp DOWN  &kp END    &kp PG_DN    &kp ENTER      &kp GRAVE  &kp LESS_THAN  &kp SQT           &kp BACKSLASH
                             &trans     &trans       &trans         &trans
            >;
        };

        left_layer {
            bindings = <
&none  &none  &none  &none   &none     &none   &none   &none  &none  &none
&none  &none  &none  &none   &none     &none   &none   &none  &none  &none
&none  &none  &none  &none   &none     &none   &none   &none  &none  &none
                     &trans  &trans    &trans  &trans
            >;
        };

        tri_layer {
            bindings = <
&sys_reset   &trans  &trans  &trans      &bt BT_SEL 0    &trans  &trans  &trans  &trans  &sys_reset
&bootloader  &trans  &trans  &trans      &bt BT_SEL 1    &trans  &trans  &trans  &trans  &bootloader
&trans       &trans  &trans  &bt BT_CLR  &bt BT_SEL 2    &trans  &trans  &trans  &trans  &trans
                             &trans      &trans          &trans  &trans
            >;
        };
    };
};
